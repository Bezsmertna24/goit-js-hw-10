{"version":3,"file":"1-timer-0-9D_NgG.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst inputEl = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\"[data-start]\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet timerId = null;\n\n\nstartBtn.disabled = true;\n\n\nflatpickr(inputEl, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if (selectedDate <= currentDate) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n});\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener(\"click\", () => {\n  startBtn.disabled = true;\n  inputEl.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      inputEl.disabled = false;\n\n      daysEl.textContent = \"00\";\n      hoursEl.textContent = \"00\";\n      minutesEl.textContent = \"00\";\n      secondsEl.textContent = \"00\";\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(delta);\n\n    daysEl.textContent = String(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n"],"names":["inputEl","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","flatpickr","selectedDates","selectedDate","iziToast","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","delta"],"mappings":"gDAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAGdN,EAAS,SAAW,GAGpBO,EAAUR,EAAS,CACjB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFgB,IAAI,MAGtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAS,SAAW,KAEpBK,EAAmBI,EACnBT,EAAS,SAAW,GAEvB,CACH,CAAC,EAGD,SAASW,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAlB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAQ,SAAW,GAEnBO,EAAU,YAAY,IAAM,CAE1B,MAAMa,EAAQd,EADF,IAAI,KAGhB,GAAIc,GAAS,EAAG,CACd,cAAcb,CAAO,EACrBP,EAAQ,SAAW,GAEnBE,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxB,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAK,EAEzDlB,EAAO,YAAc,OAAOc,CAAI,EAChCb,EAAQ,YAAcS,EAAeK,CAAK,EAC1Cb,EAAU,YAAcQ,EAAeM,CAAO,EAC9Cb,EAAU,YAAcO,EAAeO,CAAO,CAC/C,EAAE,GAAI,CACT,CAAC"}